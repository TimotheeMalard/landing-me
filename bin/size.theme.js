/* eslint-disable */

console.log('/*                       */');
console.log('/*                       */');
console.log('/* Do not edit this file */');
console.log('/*                       */');
console.log('/*                       */');

const types = ['p', 'm'];
const typesDescription = {
  p: 'padding',
  m: 'margin',
};
const positions = ['', 't', 'r', 'l', 'b', 'x', 'y'];
const screenSizes = ['', 'xs', 'sm', 'md', 'lg', 'xl'];
const screenSizesDescription = {
  xs: 'max-width: 575.98px',
  sm: 'min-width: 576px',
  md: 'min-width: 768px',
  lg: 'min-width: 992px',
  xl: 'min-width: 1200px',
};
const sizes = [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];

function style(type, position, size) {
  let text = ' ';
  if (['', 't', 'y'].includes(position)) {
    text += `${typesDescription[type]}-top: ${size}rem!important; `
  }
  if (['', 'b', 'y'].includes(position)) {
    text += `${typesDescription[type]}-bottom: ${size}rem!important; `
  }
  if (['', 'l', 'x'].includes(position)) {
    text += `${typesDescription[type]}-left: ${size}rem!important; `
  }
  if (['', 'r', 'x'].includes(position)) {
    text += `${typesDescription[type]}-right: ${size}rem!important; `
  }

  return text;
}

screenSizes.map((screenSize) => {
  if (screenSizesDescription[screenSize]) {
    console.log(`@media (${screenSizesDescription[screenSize]}) {`);
  }
  types.map((type) => {
    positions.map((position) => {
      sizes.map((size) => {
        console.log(`  .${type}${position}${screenSize.length ? '-' : ''}${screenSize}-${size} {${style(type, position, size)}}`);
      });
    });
  });
  if (screenSizesDescription[screenSize]) {
    console.log('}');
  }
});
